-- MySQL Script generated by MySQL Workbench
-- jeu. 31 janv. 2019 10:58:02 CET
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema db
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema db
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `db` DEFAULT CHARACTER SET utf8 ;
USE `db` ;

-- -----------------------------------------------------
-- Table `db`.`Photo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db`.`Photo` (
  `id` INT NOT NULL,
  `path` VARCHAR(45) NULL,
  `name` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db`.`Users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db`.`Users` (
  `id` INT NOT NULL,
  `lastname` VARCHAR(45) NULL,
  `firstname` VARCHAR(45) NULL,
  `login` VARCHAR(45) NULL,
  `password` VARCHAR(60) NULL,
  `photo_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_members_photo1_idx` (`photo_id` ASC),
  CONSTRAINT `fk_members_photo1`
    FOREIGN KEY (`photo_id`)
    REFERENCES `db`.`Photo` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db`.`Games`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db`.`Games` (
  `id` INT NOT NULL,
  `name` VARCHAR(45) NULL,
  `created_at` VARCHAR(45) NULL,
  `updated_at` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db`.`Releases`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db`.`Releases` (
  `id` INT NOT NULL,
  `games_id` INT NOT NULL,
  `name` VARCHAR(45) NULL,
  `created_at` TIMESTAMP NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_release_games1_idx` (`games_id` ASC),
  CONSTRAINT `fk_release_games1`
    FOREIGN KEY (`games_id`)
    REFERENCES `db`.`Games` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db`.`Cards`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db`.`Cards` (
  `id` INT NOT NULL,
  `name` VARCHAR(45) NULL,
  `description` VARCHAR(45) NULL,
  `releases_id` INT NOT NULL,
  `photo_id` INT NOT NULL,
  `games_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_cards_release1_idx` (`releases_id` ASC),
  INDEX `fk_cards_photo1_idx` (`photo_id` ASC),
  INDEX `fk_cards_games1_idx` (`games_id` ASC),
  CONSTRAINT `fk_cards_release1`
    FOREIGN KEY (`releases_id`)
    REFERENCES `db`.`Releases` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_cards_photo1`
    FOREIGN KEY (`photo_id`)
    REFERENCES `db`.`Photo` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_cards_games1`
    FOREIGN KEY (`games_id`)
    REFERENCES `db`.`Games` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db`.`Decks`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db`.`Decks` (
  `id` INT NOT NULL,
  `name` VARCHAR(45) NULL,
  `created_at` TIMESTAMP NULL,
  `updated_at` TIMESTAMP NULL,
  `users_id` INT NOT NULL,
  `games_id` INT NOT NULL,
  `photo_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_decks_members1_idx` (`users_id` ASC),
  INDEX `fk_decks_games1_idx` (`games_id` ASC),
  INDEX `fk_decks_photo1_idx` (`photo_id` ASC),
  CONSTRAINT `fk_decks_members1`
    FOREIGN KEY (`users_id`)
    REFERENCES `db`.`Users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_decks_games1`
    FOREIGN KEY (`games_id`)
    REFERENCES `db`.`Games` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_decks_photo1`
    FOREIGN KEY (`photo_id`)
    REFERENCES `db`.`Photo` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db`.`Users_cards`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db`.`Users_cards` (
  `users_id` INT NOT NULL,
  `cards_id` INT NOT NULL,
  INDEX `fk_member_card_members_idx` (`users_id` ASC),
  INDEX `fk_member_card_cards1_idx` (`cards_id` ASC),
  CONSTRAINT `fk_member_card_members`
    FOREIGN KEY (`users_id`)
    REFERENCES `db`.`Users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_member_card_cards1`
    FOREIGN KEY (`cards_id`)
    REFERENCES `db`.`Cards` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db`.`Decks_cards`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db`.`Decks_cards` (
  `decks_id` INT NOT NULL,
  `cards_id` INT NOT NULL,
  INDEX `fk_decks_card_decks1_idx` (`decks_id` ASC),
  INDEX `fk_decks_card_cards1_idx` (`cards_id` ASC),
  CONSTRAINT `fk_decks_card_decks1`
    FOREIGN KEY (`decks_id`)
    REFERENCES `db`.`Decks` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_decks_card_cards1`
    FOREIGN KEY (`cards_id`)
    REFERENCES `db`.`Cards` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db`.`Tournements`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db`.`Tournements` (
  `id` INT NOT NULL,
  `created_at` TIMESTAMP NULL,
  `ended_at` TIMESTAMP NULL,
  `name` VARCHAR(45) NULL,
  `description` VARCHAR(45) NULL,
  `nb_contenders` INT NULL,
  `games_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_tournaments_games1_idx` (`games_id` ASC),
  CONSTRAINT `fk_tournaments_games1`
    FOREIGN KEY (`games_id`)
    REFERENCES `db`.`Games` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db`.`Tournaments_members`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db`.`Tournaments_members` (
  `users_id` INT NOT NULL,
  `tournaments_id` INT NOT NULL,
  `status` VARCHAR(45) NULL,
  `updated_at` TIMESTAMP NULL,
  INDEX `fk_tournament_member_members1_idx` (`users_id` ASC),
  INDEX `fk_tournament_member_tournaments1_idx` (`tournaments_id` ASC),
  CONSTRAINT `fk_tournament_member_members1`
    FOREIGN KEY (`users_id`)
    REFERENCES `db`.`Users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tournament_member_tournaments1`
    FOREIGN KEY (`tournaments_id`)
    REFERENCES `db`.`Tournements` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db`.`Ban_list`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db`.`Ban_list` (
  `cards_id` INT NOT NULL,
  `releases_id` INT NOT NULL,
  INDEX `fk_ban_list_cards1_idx` (`cards_id` ASC),
  INDEX `fk_ban_list_releases1_idx` (`releases_id` ASC),
  CONSTRAINT `fk_ban_list_cards1`
    FOREIGN KEY (`cards_id`)
    REFERENCES `db`.`Cards` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ban_list_releases1`
    FOREIGN KEY (`releases_id`)
    REFERENCES `db`.`Releases` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db`.`Articles`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db`.`Articles` (
  `id` INT NOT NULL,
  `name` VARCHAR(45) NULL,
  `created_at` VARCHAR(45) NULL,
  `content` VARCHAR(45) NULL,
  `photo_id` INT NOT NULL,
  `users_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_articles_photo1_idx` (`photo_id` ASC),
  INDEX `fk_articles_members1_idx` (`users_id` ASC),
  CONSTRAINT `fk_articles_photo1`
    FOREIGN KEY (`photo_id`)
    REFERENCES `db`.`Photo` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_articles_members1`
    FOREIGN KEY (`users_id`)
    REFERENCES `db`.`Users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db`.`Commentaires`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db`.`Commentaires` (
  `id` INT NOT NULL,
  `content` VARCHAR(45) NULL,
  `users_id` INT NOT NULL,
  `commentaires_id` INT NOT NULL,
  `articles_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_commentaires_members1_idx` (`users_id` ASC),
  INDEX `fk_commentaires_commentaires1_idx` (`commentaires_id` ASC),
  INDEX `fk_commentaires_article1_idx` (`articles_id` ASC),
  CONSTRAINT `fk_commentaires_members1`
    FOREIGN KEY (`users_id`)
    REFERENCES `db`.`Users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_commentaires_commentaires1`
    FOREIGN KEY (`commentaires_id`)
    REFERENCES `db`.`Commentaires` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_commentaires_article1`
    FOREIGN KEY (`articles_id`)
    REFERENCES `db`.`Articles` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db`.`Articles_games`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db`.`Articles_games` (
  `games_id` INT NOT NULL,
  `articles_id` INT NOT NULL,
  INDEX `fk_articles_games_games1_idx` (`games_id` ASC),
  INDEX `fk_articles_games_articles1_idx` (`articles_id` ASC),
  CONSTRAINT `fk_articles_games_games1`
    FOREIGN KEY (`games_id`)
    REFERENCES `db`.`Games` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_articles_games_articles1`
    FOREIGN KEY (`articles_id`)
    REFERENCES `db`.`Articles` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db`.`Favoris`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db`.`Favoris` (
  `users_id` INT NOT NULL,
  `cards_id` INT NOT NULL,
  `articles_id` INT NOT NULL,
  `games_id` INT NOT NULL,
  `photo_id` INT NOT NULL,
  `decks_id` INT NOT NULL,
  `tournaments_id` INT NOT NULL,
  INDEX `fk_favoris_members1_idx` (`users_id` ASC),
  INDEX `fk_favoris_cards1_idx` (`cards_id` ASC),
  INDEX `fk_favoris_articles1_idx` (`articles_id` ASC),
  INDEX `fk_favoris_games1_idx` (`games_id` ASC),
  INDEX `fk_favoris_photo1_idx` (`photo_id` ASC),
  INDEX `fk_favoris_decks1_idx` (`decks_id` ASC),
  INDEX `fk_favoris_tournaments1_idx` (`tournaments_id` ASC),
  CONSTRAINT `fk_favoris_members1`
    FOREIGN KEY (`users_id`)
    REFERENCES `db`.`Users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_favoris_cards1`
    FOREIGN KEY (`cards_id`)
    REFERENCES `db`.`Cards` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_favoris_articles1`
    FOREIGN KEY (`articles_id`)
    REFERENCES `db`.`Articles` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_favoris_games1`
    FOREIGN KEY (`games_id`)
    REFERENCES `db`.`Games` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_favoris_photo1`
    FOREIGN KEY (`photo_id`)
    REFERENCES `db`.`Photo` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_favoris_decks1`
    FOREIGN KEY (`decks_id`)
    REFERENCES `db`.`Decks` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_favoris_tournaments1`
    FOREIGN KEY (`tournaments_id`)
    REFERENCES `db`.`Tournements` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
